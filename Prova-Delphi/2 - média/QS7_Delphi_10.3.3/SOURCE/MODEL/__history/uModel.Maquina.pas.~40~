///####################################################################################################################
/// uModel.Maquina
/// Implementado por Marcelo Leal
///####################################################################################################################
unit uModel.Maquina;

interface

uses
  System.Classes,
  System.SysUtils,
  uModel.Troco,
  uController.Interfaces,
  uAuxiliar.Variaveis.Globais;

type

  TModelMaquina = class(TInterfacedObject, IMaquina)
  public
    constructor Create;
    destructor Destroy; override;
    class function New : IMaquina;
    function MontarTroco(pTroco: Double): TStringList;
  end;

implementation

{ TModelMaquina }

constructor TModelMaquina.Create;
begin
end;

destructor TModelMaquina.Destroy;
begin
  inherited;
end;

class function TModelMaquina.New: IMaquina;
begin
  Result := Self.Create;
end;

function TModelMaquina.MontarTroco(pTroco: Double): TStringList;
const
  Cedulas: array[1..7] of integer = (100, 50, 20, 10, 5, 2, 1);
  Moedas:  array[1..5] of integer = (50, 25, 10, 5, 1);

var
  i, FValor, FCedulas, FMoedas: Integer;
  FLista: TStringList;
  Plural: String;
  Moeda: Real;
  FLinha: Boolean;

begin
  FLista := TStringList.Create;
  FLinha := True;
  if (pTroco > 0.00) then
     begin
       // definindo as notas do troco (parte inteira)
       FValor := trunc(pTroco);

       i := 1;
       while (FValor <> 0) do
         begin
           // Qtde de notas
           FCedulas := FValor div Cedulas[i];
           if (FCedulas <> 0) then
              begin
                if IntToStr(Cedulas[i]) <> '1' then
                   begin
                     if FCedulas = 1 then
                        FLista.Add(IntToStr(FCedulas) + ' Nota de R$ ' + IntToStr(Cedulas[i]))
                     else
                        FLista.Add(IntToStr(FCedulas) + ' Notas de R$ ' + IntToStr(Cedulas[i]))
                   end
                else
                   begin
                     FLista.Add('');
                     FLinha := False;
                     if FCedulas = 1 then
                        FLista.Add(IntToStr(FCedulas) + ' Moeda de R$ ' + IntToStr(Cedulas[i]))
                     else
                        FLista.Add(IntToStr(FCedulas) + ' Moedas de R$ ' + IntToStr(Cedulas[i]))
                   end;

                FValor := FValor mod Cedulas[i];
              end;

           // Próxima Cédula
           i := i + 1;
         end;

       // Definindo as moedas do troco (parte fracionária)
       FValor := round(frac(pTroco) * 100);

       if FLinha then
          FLista.Add('');

       i := 1;
       while (FValor <> 0) do
         begin
           FMoedas := FValor div Moedas[i]; // Qtd de moedas
           if (FMoedas <> 0) then
              begin
                Moeda  := Moedas[i] / 100;
                Plural := '';
                if FCedulas = 1 then
                   Plural := 's';

                FLista.Add(Format('%d Moeda%s de R$ %s',[FMoedas, Plural, FormatFloat('###0.00', Moeda)]));
                FValor := FValor mod Moedas[i]; // Sobra
              end;

           // Próxima Moeda
           i := i + 1;
         end;
     end;

  Result := FLista;
end;

end.

